{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/webpack/bootstrap","webpack://asc/../node_modules/node-libs-browser/mock/process.js","webpack://asc/../node_modules/webpack/buildin/global.js","webpack://asc/../node_modules/path-browserify/index.js","webpack://asc/../node_modules/browser-process-hrtime/index.js","webpack://asc/../node_modules/minimist/index.js","webpack://asc/external \"assemblyscript\"","webpack://asc/../node_modules/@protobufjs/utf8/index.js","webpack://asc/./asc.js"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","path","cwd","nextTick","fn","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","Error","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","g","Function","eval","window","process","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","basename","ext","extname","str","len","global","hrtime","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","now","mozNow","msNow","oNow","webkitNow","Date","getTime","isNumber","x","test","args","opts","flags","bools","strings","unknownFn","allBools","Boolean","forEach","key","aliases","keys","alias","y","string","defaults","_","setArg","undefined","notFlags","val","arg","argDefined","Number","setKey","obj","isArray","aliasIsBoolean","some","indexOf","match","next","letters","broken","j","stopEarly","apply","code","utf8","charCodeAt","read","buffer","t","chunk","String","fromCharCode","write","offset","c1","c2","fs","EOL","assemblyscript","isDev","parseArguments","options","opt","default","type","boolean","checkDiagnostics","emitter","stderr","diagnostic","hasErrors","nextDiagnostic","formatDiagnostic","isTTY","isError","createStats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","measure","times","formatTime","time","toFixed","printStats","stats","output","format","count","stdout","install","register","project","isBundle","version","sourceMapRoot","libraryPrefix","LIBRARY_PREFIX","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","allocator/arena","allocator/buddy","allocator/common/index","allocator/emscripten","allocator/system","allocator/tlsf","array","arraybuffer","builtins","error","iterator","map","math","memory","polyfills","regexp","set","typedarray","libDir","bundled","sync","file","replace","readFileSync","definitionFiles","assembly","portable","stdDir","compileString","sources","input.ts","create","createMemoryStream","binary","text","main","readFile","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","err","stack","help","option","desc","line","baseDir","customLibDirs","lib","parser","k","sourcePath","sourceText","parseFile","nextFile","startsWith","plainName","substring","indexName","noLib","libPath","libFiles","endsWith","libText","program","finishParsing","compilerOptions","createOptions","setTarget","setNoTreeShaking","noTreeShaking","setNoAssert","noAssert","setNoMemory","noMemory","setImportMemory","importMemory","setImportTable","importTable","setMemoryBase","memoryBase","setSourceMap","sourceMap","setGlobalAlias","use","part","compileProgram","dispose","validate","trapMode","runPasses","optimizeLevel","shrinkLevel","debugInfo","noDebug","optimize","setOptimizeLevel","setShrinkLevel","setDebugInfo","pass","noEmit","hasStdout","hasOutput","outFile","textFile","asmjsFile","binaryFile","wasm","sourceMapURL","toBinary","writeStdout","JSON","parse","sourceRoot","sourceContents","stringify","asm","toAsmjs","idlFile","idl","buildIDL","tsdFile","tsd","buildTSD","wat","toText","encoding","writeFileSync","files","used","Buf","Buffer","Uint8Array","stream","toBuffer","toString","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","target","types","allowJs"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","module.exports = process.hrtime || hrtime\n\n// polyfil for window.performance.now\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}","module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        keys.slice(0,-1).forEach(function (key) {\n            if (o[key] === undefined) o[key] = {};\n            o = o[key];\n        });\n\n        var key = keys[keys.length - 1];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /true|false/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n","if(typeof __WEBPACK_EXTERNAL_MODULE__6__ === 'undefined') {var e = new Error(\"Cannot find module \\\"assemblyscript\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__6__;","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/**\n * Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present (indicated by a `-dev` version).\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n *\n * @module asc\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst utf8 = require(\"@protobufjs/utf8\");\nconst EOL = process.platform === \"win32\" ? \"\\r\\n\" : \"\\n\";\n\n// Use distribution files if present, otherwise run the sources directly\nvar assemblyscript, isDev;\n(() => {\n  try {\n    assemblyscript = require(\"../dist/assemblyscript.js\");\n    isDev = false;\n    try { require(\"source-map-support\").install(); } catch (e) {/* optional */}\n  } catch (e) {\n    try {\n      require(\"ts-node\").register({ project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\") });\n      require(\"../src/glue/js\");\n      assemblyscript = require(\"../src\");\n      isDev = true;\n    } catch (e) {\n      // last resort: same directory CommonJS\n      assemblyscript = eval(\"require('./assemblyscript')\");\n      isDev = false;\n    }\n  }\n})();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** Whether asc runs the sources directly or not. */\nexports.isDev = isDev;\n\n/** AssemblyScript veresion. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : require(\"../package.json\").version;\n\n/** Available options. */\nexports.options = require(\"./asc.json\");\n\n/** Common root used in source maps. */\nexports.sourceMapRoot = \"assemblyscript:///\";\n\n/** Prefix used for library files. */\nexports.libraryPrefix = assemblyscript.LIBRARY_PREFIX;\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 2;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const libFiles = require(\"glob\").sync(\"**/*.ts\", { cwd: libDir });\n  const bundled = {};\n  libFiles.forEach(file => bundled[file.replace(/\\.ts$/, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\" ));\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const stdDir = path.join(__dirname, \"..\", \"std\");\n  return {\n    \"assembly\": fs.readFileSync(path.join(stdDir, \"assembly.d.ts\"), \"utf8\"),\n    \"portable\": fs.readFileSync(path.join(stdDir, \"portable.d.ts\"), \"utf8\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { \"input.ts\": sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream(),\n    binary: null,\n    text: null\n  });\n  exports.main([\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n    ...Object.keys(options || {}).map(arg => `--${arg}=${options[arg]}`),\n    ...Object.keys(sources),\n  ], {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => sources.hasOwnProperty(name) ? sources[name] : null,\n    writeFile: (name, contents) => output[name] = contents,\n    listFiles: () => []\n  });\n  return output;\n}\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n\n  // All of the above must be specified in browser environments\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  const args = parseArguments(argv);\n  const indent = 24;\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(err.stack + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (args.version) {\n    stdout.write(\"Version \" + exports.version + (isDev ? \"-dev\" : \"\") + EOL);\n    return callback(null);\n  }\n  // Print the help message if requested or no source files are provided\n  if (args.help || args._.length < 1) {\n    const opts = [];\n    Object.keys(exports.options).forEach(name => {\n      var option = exports.options[name];\n      var text = \" \";\n      text += \"--\" + name;\n      if (option.aliases && option.aliases[0].length === 1) {\n        text += \", -\" + option.aliases[0];\n      }\n      while (text.length < indent) {\n        text += \" \";\n      }\n      if (Array.isArray(option.desc)) {\n        opts.push(text + option.desc[0] + option.desc.slice(1).map(line => {\n          for (let i = 0; i < indent; ++i) {\n            line = \" \" + line;\n          }\n          return EOL + line;\n        }).join(\"\"));\n      } else {\n        opts.push(text + option.desc);\n      }\n    });\n\n    (args.help ? stdout : stderr).write([\n      \"Version \" + exports.version + (isDev ? \"-dev\" : \"\"),\n      \"Syntax:   asc [entryFile ...] [options]\",\n      \"\",\n      \"Examples: asc hello.ts\",\n      \"          asc hello.ts -b hello.wasm -t hello.wat\",\n      \"          asc hello1.ts hello2.ts -b -O > hello.wasm\",\n      \"\",\n      \"Options:\"\n    ].concat(opts).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Set up base directory\n  const baseDir = args.baseDir ? path.resolve(args.baseDir) : \".\";\n\n  // Include custom library components (with or without stdlib)\n  const customLibDirs = [];\n  if (args.lib) {\n    if (typeof args.lib === \"string\") args.lib = args.lib.split(\",\");\n    Array.prototype.push.apply(customLibDirs, args.lib.map(lib => lib.trim()));\n  }\n\n  // Begin parsing\n  var parser = null;\n\n  // Include entry files\n  for (let i = 0, k = args._.length; i < k; ++i) {\n    const filename = args._[i];\n\n    let sourcePath = filename.replace(/\\\\/g, \"/\").replace(/(\\.ts|\\/)$/, \"\");\n\n    // Try entryPath.ts, then entryPath/index.ts\n    let sourceText = readFile(path.join(baseDir, sourcePath) + \".ts\");\n    if (sourceText === null) {\n      sourceText = readFile(path.join(baseDir, sourcePath, \"index.ts\"));\n      if (sourceText === null) {\n        return callback(Error(\"Entry file '\" + sourcePath + \".ts' not found.\"));\n      } else {\n        sourcePath += \"/index.ts\";\n      }\n    } else {\n      sourcePath += \".ts\";\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      parser = assemblyscript.parseFile(sourceText, sourcePath, true, parser);\n    });\n\n    while ((sourcePath = parser.nextFile()) != null) {\n      let found = false;\n\n      // Load library file if explicitly requested\n      if (sourcePath.startsWith(exports.libraryPrefix)) {\n        const plainName = sourcePath.substring(exports.libraryPrefix.length);\n        const indexName = sourcePath.substring(exports.libraryPrefix.length) + \"/index\";\n        if (exports.libraryFiles.hasOwnProperty(plainName)) {\n          sourceText = exports.libraryFiles[plainName];\n          sourcePath = exports.libraryPrefix + plainName + \".ts\";\n        } else if (exports.libraryFiles.hasOwnProperty(indexName)) {\n          sourceText = exports.libraryFiles[indexName];\n          sourcePath = exports.libraryPrefix + indexName + \".ts\";\n        } else {\n          for (let i = 0, k = customLibDirs.length; i < k; ++i) {\n            const dir = customLibDirs[i];\n            sourceText = readFile(path.join(dir, plainName + \".ts\"));\n            if (sourceText !== null) {\n              sourcePath = exports.libraryPrefix + plainName + \".ts\";\n              break;\n            } else {\n              sourceText = readFile(path.join(dir, indexName + \".ts\"));\n              if (sourceText !== null) {\n                sourcePath = exports.libraryPrefix + indexName + \".ts\";\n                break;\n              }\n            }\n          }\n        }\n\n      // Otherwise try nextFile.ts, nextFile/index.ts, ~lib/nextFile.ts, ~lib/nextFile/index.ts\n      } else {\n        const plainName = sourcePath;\n        const indexName = sourcePath + \"/index\";\n        sourceText = readFile(path.join(baseDir, plainName + \".ts\"));\n        if (sourceText !== null) {\n          sourcePath = plainName + \".ts\";\n        } else {\n          sourceText = readFile(path.join(baseDir, indexName + \".ts\"));\n          if (sourceText !== null) {\n            sourcePath = indexName + \".ts\";\n          } else if (!plainName.startsWith(\".\")) {\n            if (exports.libraryFiles.hasOwnProperty(plainName)) {\n              sourceText = exports.libraryFiles[plainName];\n              sourcePath = exports.libraryPrefix + plainName + \".ts\";\n            } else if (exports.libraryFiles.hasOwnProperty(indexName)) {\n              sourceText = exports.libraryFiles[indexName];\n              sourcePath = exports.libraryPrefix + indexName + \".ts\";\n            } else {\n              for (let i = 0, k = customLibDirs.length; i < k; ++i) {\n                const dir = customLibDirs[i];\n                sourceText = readFile(path.join(dir, plainName + \".ts\"));\n                if (sourceText !== null) {\n                  sourcePath = exports.libraryPrefix + plainName + \".ts\";\n                  break;\n                } else {\n                  sourceText = readFile(path.join(dir, indexName + \".ts\"));\n                  if (sourceText !== null) {\n                    sourcePath = exports.libraryPrefix + indexName + \".ts\";\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (sourceText == null) {\n        return callback(Error(\"Import file '\" + sourcePath + \".ts' not found.\"));\n      }\n      stats.parseCount++;\n      stats.parseTime += measure(() => {\n        assemblyscript.parseFile(sourceText, sourcePath, false, parser);\n      });\n    }\n    if (checkDiagnostics(parser, stderr)) {\n      return callback(Error(\"Parse error\"));\n    }\n  }\n\n  // Include (other) library components\n  if (!args.noLib) // bundled\n    Object.keys(exports.libraryFiles).forEach(libPath => {\n      if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n      stats.parseCount++;\n      stats.parseTime += measure(() => {\n        parser = assemblyscript.parseFile(\n          exports.libraryFiles[libPath],\n          exports.libraryPrefix + libPath + \".ts\",\n          false,\n          parser\n        );\n      });\n    });\n  for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n    let libDir = customLibDirs[i];\n    let libFiles;\n    if (libDir.endsWith(\".ts\")) {\n      libFiles = [ path.basename(libDir) ];\n      libDir = path.dirname(libDir);\n    } else {\n      libFiles = listFiles(libDir);\n    }\n    for (let j = 0, l = libFiles.length; j < l; ++j) {\n      let libPath = libFiles[j];\n      let libText = readFile(path.join(libDir, libPath));\n      if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n      stats.parseCount++;\n      stats.parseTime += measure(() => {\n        parser = assemblyscript.parseFile(\n          libText,\n          exports.libraryPrefix + libPath,\n          false,\n          parser\n        );\n      });\n    }\n  }\n\n  // Finish parsing\n  const program = assemblyscript.finishParsing(parser);\n\n  // Begin compilation\n  const compilerOptions = assemblyscript.createOptions();\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoTreeShaking(compilerOptions, !!args.noTreeShaking);\n  assemblyscript.setNoAssert(compilerOptions, !!args.noAssert);\n  assemblyscript.setNoMemory(compilerOptions, !!args.noMemory);\n  assemblyscript.setImportMemory(compilerOptions, !!args.importMemory);\n  assemblyscript.setImportTable(compilerOptions, !!args.importTable);\n  assemblyscript.setMemoryBase(compilerOptions, args.memoryBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, args.sourceMap != null);\n\n  // Initialize default aliases\n  assemblyscript.setGlobalAlias(compilerOptions, \"Math\", \"NativeMath\");\n  assemblyscript.setGlobalAlias(compilerOptions, \"Mathf\", \"NativeMathf\");\n\n  // Add or override aliases if specified\n  var aliases = args.use;\n  if (aliases != null) {\n    if (typeof aliases === \"string\") aliases = aliases.split(\",\");\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let name = part.substring(0, p).trim();\n      let alias = part.substring(p + 1).trim();\n      if (!name.length || !alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      assemblyscript.setGlobalAlias(compilerOptions, name, alias);\n    }\n  }\n\n  var module;\n  stats.compileCount++;\n  (() => {\n    try {\n      stats.compileTime += measure(() => {\n        module = assemblyscript.compileProgram(program, compilerOptions);\n      });\n    } catch (e) {\n      return callback(e);\n    }\n  })();\n  if (checkDiagnostics(parser, stderr)) {\n    if (module) module.dispose();\n    return callback(Error(\"Compile error\"));\n  }\n\n  // Validate the module if requested\n  if (args.validate) {\n    stats.validateCount++;\n    stats.validateTime += measure(() => {\n      if (!module.validate()) {\n        module.dispose();\n        return callback(Error(\"Validate error\"));\n      }\n    });\n  }\n\n  // Set Binaryen-specific options\n  if (args.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPasses([ \"trap-mode-clamp\" ]);\n    });\n  } else if (args.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPasses([ \"trap-mode-js\" ]);\n    });\n  } else if (args.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  var optimizeLevel = -1;\n  var shrinkLevel = 0;\n  var debugInfo = !args.noDebug;\n\n  if (args.optimize !== false) {\n    if (typeof args.optimize === \"number\") {\n      optimizeLevel = args.optimize;\n    } else if (args[\"0\"]) {\n      optimizeLevel = 0;\n    } else if (args[\"1\"]) {\n      optimizeLevel = 1;\n    } else if (args[\"2\"]) {\n      optimizeLevel = 2;\n    } else if (args[\"3\"]) {\n      optimizeLevel = 3;\n    } else if (args.optimize === true) {\n      optimizeLevel = exports.defaultOptimizeLevel;\n      shrinkLevel = exports.defaultShrinkLevel;\n    } else\n      optimizeLevel = 0;\n  }\n\n  if (args[\"s\"]) {\n    shrinkLevel = 1;\n  } else if (args[\"z\"]) {\n    shrinkLevel = 2;\n  }\n\n  if (typeof args.optimizeLevel === \"number\") {\n    optimizeLevel = args.optimizeLevel;\n  }\n\n  if (typeof args.shrinkLevel === \"number\") {\n    shrinkLevel = args.shrinkLevel;\n  } else if (args.shrinkLevel === \"s\") {\n    shrinkLevel = 1;\n  } else if (args.shrinkLevel === \"z\") {\n    shrinkLevel = 2;\n  }\n\n  module.setOptimizeLevel(optimizeLevel > 0 ? optimizeLevel : 0);\n  module.setShrinkLevel(shrinkLevel);\n  module.setDebugInfo(debugInfo);\n\n  var runPasses = [];\n  if (args.runPasses) {\n    if (typeof args.runPasses === \"string\") {\n      args.runPasses = args.runPasses.split(\",\");\n    }\n    if (args.runPasses.length) {\n      args.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass) < 0)\n          runPasses.push(pass);\n      });\n    }\n  }\n\n  // Optimize the module if requested\n  if (optimizeLevel >= 0) {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.optimize();\n    });\n  }\n\n  // Run additional passes if requested\n  if (runPasses.length) {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPasses(runPasses.map(pass => pass.trim()));\n    });\n  }\n\n  // Prepare output\n  if (!args.noEmit) {\n    let hasStdout = false;\n    let hasOutput = false;\n\n    if (args.outFile != null) {\n      if (/\\.was?t$/.test(args.outFile) && args.textFile == null) {\n        args.textFile = args.outFile;\n      } else if (/\\.js$/.test(args.outFile) && args.asmjsFile == null) {\n        args.asmjsFile = args.outFile;\n      } else if (args.binaryFile == null) {\n        args.binaryFile = args.outFile;\n      }\n    }\n\n    // Write binary\n    if (args.binaryFile != null) {\n      let sourceMapURL = args.sourceMap != null\n        ? args.sourceMap.length\n          ? args.sourceMap\n          : path.basename(args.binaryFile) + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        wasm = module.toBinary(sourceMapURL)\n      });\n\n      if (args.binaryFile.length) {\n        writeFile(path.join(baseDir, args.binaryFile), wasm.output);\n      } else {\n        writeStdout(wasm.output);\n        hasStdout = true;\n      }\n      hasOutput = true;\n\n      // Post-process source map\n      if (wasm.sourceMap != null) {\n        if (args.binaryFile.length) {\n          let sourceMap = JSON.parse(wasm.sourceMap);\n          sourceMap.sourceRoot = exports.sourceMapRoot;\n          sourceMap.sources.forEach((name, index) => {\n            let text = null;\n            if (name.startsWith(exports.libraryPrefix)) {\n              for (let i = 0, k = customLibDirs.length; i < k; ++i) {\n                text = readFile(path.join(\n                  customLibDirs[i],\n                  name.substring(exports.libraryPrefix.length))\n                );\n                if (text !== null) break;\n              }\n            } else {\n              text = readFile(path.join(baseDir, name));\n            }\n            if (text === null) {\n              return callback(Error(\"Source file '\" + name + \"' not found.\"));\n            }\n            if (!sourceMap.sourceContents) sourceMap.sourceContents = [];\n            sourceMap.sourceContents[index] = text;\n          });\n          writeFile(path.join(\n            baseDir,\n            path.dirname(args.binaryFile),\n            path.basename(sourceMapURL)\n          ), JSON.stringify(sourceMap));\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Write asm.js\n    if (args.asmjsFile != null) {\n      let asm;\n      if (args.asmjsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          asm = module.toAsmjs();\n        });\n        writeFile(path.join(baseDir, args.asmjsFile), asm);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          asm = module.toAsmjs();\n        });\n        writeStdout(asm);\n        hasStdout = true;\n      }\n      hasOutput = true;\n    }\n\n    // Write WebIDL\n    if (args.idlFile != null) {\n      let idl;\n      if (args.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeFile(path.join(baseDir, args.idlFile), idl);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeStdout(idl);\n        hasStdout = true;\n      }\n      hasOutput = true;\n    }\n\n    // Write TypeScript definition\n    if (args.tsdFile != null) {\n      let tsd;\n      if (args.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeFile(path.join(baseDir, args.tsdFile), tsd);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeStdout(tsd);\n        hasStdout = true;\n      }\n      hasOutput = true;\n    }\n\n    // Write text (must be last)\n    if (args.textFile != null || !hasOutput) {\n      let wat;\n      if (args.textFile && args.textFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          wat = module.toText();\n        });\n        writeFile(path.join(baseDir, args.textFile), wat);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          wat = module.toText()\n        });\n        writeStdout(wat);\n      }\n    }\n  }\n\n  module.dispose();\n  if (args.measure) {\n    printStats(stats, stderr);\n  }\n  return callback(null);\n\n  function readFileNode(filename) {\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(filename, { encoding: \"utf8\" });\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        if (typeof contents === \"string\") {\n          fs.writeFileSync(filename, contents, { encoding: \"utf8\" } );\n        } else {\n          fs.writeFileSync(filename, contents);\n        }\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname) {\n    var files;\n    try {\n      stats.readTime += measure(() => {\n        files = require(\"glob\").sync(\"*.ts\", { cwd: dirname });\n      });\n      return files;\n    } catch (e) {\n      return [];\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      if (typeof contents === \"string\") {\n        stdout.write(contents, { encoding: \"utf8\" });\n      } else {\n        stdout.write(contents);\n      }\n    });\n  }\n}\n\n/** Parses the specified command line arguments. */\nfunction parseArguments(argv) {\n  const opts = {};\n  Object.keys(exports.options).forEach(key => {\n    const opt = exports.options[key];\n    if (opt.aliases) {\n      (opts.alias || (opts.alias = {}))[key] = opt.aliases;\n    }\n    if (opt.default !== undefined) {\n      (opts.default || (opts.default = {}))[key] = opt.default;\n    }\n    if (opt.type === \"string\") {\n      (opts.string || (opts.string = [])).push(key);\n    } else if (opt.type === \"boolean\") {\n      (opts.boolean || (opts.boolean = [])).push(key);\n    }\n  });\n  return require(\"minimist\")(argv, opts);\n}\n\nexports.parseArguments = parseArguments;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(emitter, stderr) {\n  var diagnostic;\n  var hasErrors = false;\n  while ((diagnostic = assemblyscript.nextDiagnostic(emitter)) != null) {\n    stderr.write(\n      assemblyscript.formatDiagnostic(diagnostic, stderr.isTTY, true) +\n      EOL + EOL\n    );\n    if (assemblyscript.isError(diagnostic)) hasErrors = true;\n  }\n  return hasErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\nif (!process.hrtime) process.hrtime = require(\"browser-process-hrtime\");\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"N/A\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  function format(time, count) {\n    return formatTime(time);\n  }\n  (output || process.stdout).write([\n    \"I/O Read  : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse     : \" + format(stats.parseTime, stats.parseCount),\n    \"Compile   : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit      : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate  : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize  : \" + format(stats.optimizeTime, stats.optimizeCount)\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar Buf = typeof global !== \"undefined\" && global.Buffer || Uint8Array;\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = new Buf(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = new Buf(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n"],"sourceRoot":""}